name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}?sslmode=require
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: "http://localhost:3000"

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # Specify the Node.js version you want to use

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Check if port 3000 is in use
        run: |
          if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null ; then
            echo "Port 3000 is in use. Terminating existing process."
            lsof -ti:3000 | xargs kill -9
          fi

      - name: Build and start Next.js
        run: |
          npm run build
          npm run start > server.log 2>&1 &
          sleep 10
          cat server.log
        env:
          PORT: 3000

      - name: Wait for Next.js to be ready
        run: |
          timeout 60s bash -c 'until curl -sSf http://localhost:3000 >/dev/null; do sleep 5; echo "Waiting for Next.js to be ready..."; done'
        continue-on-error: true

      - name: Check server status
        run: |
          if curl -sSf http://localhost:3000 >/dev/null; then
            echo "Server is up and running"
          else
            echo "Server failed to start. Here are the logs:"
            cat server.log
            exit 1
          fi

      - name: Run Playwright tests with tracing
        run: npx playwright test --trace on

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: server-logs
          path: server.log
          retention-days: 7
